{"version":3,"sources":["assets/pop.mp3","assets/RecycleBin.mp3","utils.ts","actions.ts","hooks/useLists.tsx","pages/Lists.tsx","pages/About.tsx","pages/Lyout.tsx","App.tsx","serviceWorker.ts","reducers.ts","index.tsx"],"names":["module","exports","handleInputChange","set","e","target","value","setLists","lists","payload","type","setNewItemButtonVisiblity","visible","useLists","dispatch","useDispatch","useSelector","state","listsNames","map","item","i","name","refetchLists","React","clearing","localStorage","length","myKey","key","JSON","parse","getItem","push","sort","a","b","Date","date","getTime","popSound","require","emptyTrash","Lists","newItem","setNewItem","editItem","setEditItem","newList","setNewList","editList","setEditList","editListObj","setEditListObj","newListName","setNewListName","newItemText","setNewItemText","newItemPriority","setNewItemPriority","newItemButtonVisiblity","newItemButtonVisibility","audioOnClick","Audio","audioOnDelete","window","addEventListener","bns","document","getElementsByTagName","svgs","play","addSoundToButtons","resetInputs","getElementById","checked","handleClear","clear","handleModalClose","handleRemoveList","removeItem","handleAddList","myDate","myObj","detail","myJSON","stringify","setItem","handleSaveList","list","handleAddItemToList","newDetail","id","text","priority","handleDeleteItemFromList","detailId","splice","findIndex","handleEditItemInList","console","log","handleExportLists","element","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","handleImportLists","event","files","fileReader","FileReader","onload","result","forEach","index","readAsText","confirmDelete","button","listKey","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","Title","as","Content","Button","onClick","Row","Col","Tab","Container","xs","style","minWidth","className","ListGroup","marginTop","Item","disabled","editingItem","Pane","eventKey","Table","bordered","hover","size","backgroundColor","color","editingItemId","FormControl","onChange","Form","Check","icon","faCheckSquare","faEdit","faTrashAlt","faPlus","faTimes","undefined","Modal","show","aria-labelledby","centered","onHide","Header","closeButton","Body","Group","controlId","Label","Control","placeholder","Footer","faCloudDownloadAlt","htmlFor","faCloudUploadAlt","accept","About","useHistory","Layout","fluid","path","component","to","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","rootReducer","action","store","createStore","composeWithDevTools","ReactDOM","render","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0ed13aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pop.627c0e8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/RecycleBin.129d4ba1.mp3\";","export const handleInputChange = (set:any) => (e:any) => set(e.target.value);\r\n\r\nexport const stopPropagation = (f:any) => (e:any) => {\r\n  e.stopPropagation();\r\n  f();\r\n};","export const setLists = (lists: any) => ({\r\n  payload: lists,\r\n  type: 'SET_LISTS',\r\n});\r\n\r\nexport const setNewItemButtonVisiblity = (visible: boolean) => ({\r\n  type: 'SET_NEW_ITEM_BUTTON_VISIBILITY',\r\n  payload: visible,\r\n});","import * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {setLists} from \"../actions\";\r\nimport {IList, IState} from \"../types\";\r\n\r\nconst useLists = () => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector<IState, any[]>(state => state.lists);\r\n  const listsNames:string[] = lists.map((item, i) => {\r\n    return item.name\r\n  });\r\n\r\n  const refetchLists = React.useCallback((clearing:boolean = false) => {\r\n    if(localStorage.length > 0 && !clearing){\r\n      let lists = [];\r\n      for(let i=0; i<localStorage.length; i++){\r\n        const myKey = localStorage.key(i);\r\n        const item = JSON.parse(localStorage.getItem(myKey as string) as string);\r\n        lists.push(item);\r\n      }\r\n      lists.sort((a:IList,b:IList) => +new Date(a.date).getTime() - +new Date(b.date).getTime());\r\n      dispatch(setLists(lists));\r\n    }\r\n    else if(localStorage.length === 0 && clearing){\r\n      dispatch(setLists([]));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (lists.length === 0) {\r\n      refetchLists();\r\n    }\r\n  }, [refetchLists, lists]);\r\n\r\n  return { refetchLists, lists, listsNames };\r\n};\r\n\r\nexport default useLists;\r\n","import * as React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  ListGroup,\r\n  Modal,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Row,\r\n  Tab,\r\n  Table\r\n} from \"react-bootstrap\";\r\nimport {handleInputChange} from \"../utils\";\r\nimport useLists from \"../hooks/useLists\";\r\nimport {IEditItem, IList, IListDetail, IState} from \"../types\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faCheckSquare,\r\n  faCloudDownloadAlt,\r\n  faCloudUploadAlt,\r\n  faEdit,\r\n  faPlus,\r\n  faTimes,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport {setNewItemButtonVisiblity} from \"../actions\";\r\n\r\nconst popSound = require(\"../assets/pop.mp3\");\r\nconst emptyTrash = require(\"../assets/RecycleBin.mp3\");\r\n\r\nconst Lists: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [newItem, setNewItem] = React.useState<Boolean>(false);\r\n  const [editItem, setEditItem] = React.useState<IEditItem | null>(null);\r\n  const [newList, setNewList] = React.useState<Boolean>(false);\r\n  const [editList, setEditList] = React.useState<Boolean>(false);\r\n  const [editListObj, setEditListObj] = React.useState<IList | null>(null);\r\n  const [newListName, setNewListName] = React.useState<string>('');\r\n  const [newItemText, setNewItemText] = React.useState<string>('');\r\n  const [newItemPriority, setNewItemPriority] = React.useState<boolean>(false);\r\n  const {refetchLists, lists} = useLists();\r\n  const newItemButtonVisiblity = useSelector<IState, boolean>(state => state.newItemButtonVisibility);\r\n  const audioOnClick = new Audio(popSound);\r\n  const audioOnDelete = new Audio(emptyTrash);\r\n\r\n  function addSoundToButtons() {\r\n    const bns = document.getElementsByTagName(\"button\");\r\n    const svgs = document.getElementsByTagName(\"svg\");\r\n    for (let i = 0; i < bns.length; i++) {\r\n      bns[i].addEventListener(\"click\", () => audioOnClick.play());\r\n    }\r\n    for (let i = 0; i < svgs.length; i++) {\r\n      svgs[i].addEventListener(\"click\", () => audioOnClick.play());\r\n    }\r\n  }\r\n\r\n  window.addEventListener(\"load\", () => {\r\n    addSoundToButtons();\r\n  });\r\n\r\n  const resetInputs = React.useCallback(() => {\r\n    if (newItem) {\r\n      (document.getElementById('priority') as HTMLInputElement).checked = false;\r\n      (document.getElementById('text') as HTMLInputElement).value = \"\";\r\n      setNewItem(false);\r\n    }\r\n    setNewItemText('');\r\n    setNewItemPriority(false);\r\n    setEditItem(null);\r\n  }, [newItem])\r\n\r\n  const handleClear = React.useCallback((clearing: boolean) => {\r\n    localStorage.clear();\r\n    refetchLists(clearing);\r\n  }, [refetchLists])\r\n\r\n  const handleModalClose = () => {\r\n    setNewList(false);\r\n    setEditList(false);\r\n    setNewListName('');\r\n  }\r\n\r\n  const handleRemoveList = React.useCallback(() => {\r\n    if (editListObj) {\r\n      localStorage.removeItem(editListObj.key)\r\n      setEditListObj(null);\r\n      dispatch(setNewItemButtonVisiblity(false));\r\n      if (localStorage.length === 0) {\r\n        refetchLists(true);\r\n      } else {\r\n        refetchLists();\r\n      }\r\n    }\r\n  }, [editListObj, refetchLists, dispatch])\r\n\r\n  const handleAddList = React.useCallback(() => {\r\n    const myDate = new Date();\r\n    const myKey = newListName + myDate.getTime();\r\n    const myObj = {key: myKey, name: newListName, detail: [], date: new Date()};\r\n    const myJSON = JSON.stringify(myObj);\r\n    localStorage.setItem(myKey, myJSON);\r\n    handleModalClose();\r\n    refetchLists();\r\n  }, [newListName, refetchLists])\r\n\r\n  const handleSaveList = React.useCallback(() => {\r\n    if (editListObj) {\r\n      const list: IList = JSON.parse(localStorage.getItem(editListObj!.key) as string);\r\n      list.name = newListName;\r\n      list.date = new Date();\r\n      const myJSON = JSON.stringify(list);\r\n      localStorage.setItem(editListObj!.key, myJSON);\r\n      setEditListObj(null);\r\n      dispatch(setNewItemButtonVisiblity(false));\r\n      handleModalClose();\r\n      refetchLists();\r\n    }\r\n  }, [editListObj, refetchLists, newListName, dispatch])\r\n\r\n  const handleAddItemToList = React.useCallback((key: IList['key']) => {\r\n    const list: IList = JSON.parse(localStorage.getItem(key) as string);\r\n    const newDetail: IListDetail = {\r\n      id: list.detail.length > 0 ? list.detail[list.detail.length - 1].id + 1 : 1,\r\n      text: newItemText,\r\n      priority: newItemPriority,\r\n      date: new Date()\r\n    }\r\n    list.detail.push(newDetail);\r\n    const myJSON = JSON.stringify(list);\r\n    localStorage.setItem(list.key, myJSON);\r\n    resetInputs();\r\n    refetchLists();\r\n  }, [resetInputs, newItemText, newItemPriority, refetchLists])\r\n\r\n  const handleDeleteItemFromList = React.useCallback((key: IList['key'], detailId: number) => {\r\n    const list: IList = JSON.parse(localStorage.getItem(key) as string);\r\n    list.detail.splice(list.detail.findIndex(item => item.id === detailId), 1)\r\n    const myJSON = JSON.stringify(list);\r\n    localStorage.setItem(list.key, myJSON);\r\n    refetchLists();\r\n  }, [refetchLists])\r\n\r\n  const handleEditItemInList = React.useCallback((key: IList['key'], detail: IListDetail) => {\r\n    console.log(\"aaaa\");\r\n    setEditItem(null);\r\n    const list: IList = JSON.parse(localStorage.getItem(key) as string);\r\n    const newDetail: IListDetail = {id: detail.id, text: newItemText, priority: newItemPriority, date: new Date()}\r\n    list.detail[detail.id - 1] = {...newDetail};\r\n    const myJSON = JSON.stringify(list);\r\n    localStorage.setItem(list.key, myJSON);\r\n    resetInputs();\r\n    refetchLists();\r\n  }, [newItemText, newItemPriority, refetchLists, resetInputs])\r\n\r\n  const handleExportLists = React.useCallback(() => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([JSON.stringify(lists)], {type: 'application/json'});\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"lists.json\";\r\n    // row below needed probably for older firefox, latest quantum firefox support most features from web-kit\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }, [lists])\r\n\r\n  const handleImportLists = React.useCallback((event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const fileReader: FileReader = new FileReader();\r\n      fileReader.onload = (e) => {\r\n        if (e.target) {\r\n          const importedLists: IList[] = JSON.parse(e.target.result as string);\r\n          importedLists.forEach((list: IList, index) => {\r\n            const myDate = new Date();\r\n            const myKey = list.name + myDate.getTime() + index;\r\n            const myObj = {key: myKey, name: list.name, detail: list.detail};\r\n            const myJSON = JSON.stringify(myObj);\r\n            localStorage.setItem(myKey, myJSON);\r\n          })\r\n          refetchLists();\r\n        }\r\n      };\r\n      fileReader.readAsText(file);\r\n    }\r\n    (document.getElementById(\"importFile\") as HTMLInputElement).value = \"\";\r\n  }, [refetchLists])\r\n\r\n  //type: 1=remove all lists, 2=remove selected list, 3=remove item from list\r\n  const confirmDelete = (button: any, type: number, listKey = \"\", detailId = 0) => {\r\n    return (\r\n      <OverlayTrigger\r\n        rootClose\r\n        trigger=\"click\"\r\n        key=\"top\"\r\n        placement=\"top\"\r\n        overlay={\r\n          <Popover id={`popover-positioned-top`}>\r\n            <Popover.Title as=\"h3\">Are you sure?</Popover.Title>\r\n            <Popover.Content>\r\n              <Button onClick={() => {\r\n                audioOnDelete.play();\r\n                document.body.click();\r\n                if (type === 1) {\r\n                  handleClear(true);\r\n                } else if (type === 2) {\r\n                  handleRemoveList();\r\n                } else if (type === 3) {\r\n                  handleDeleteItemFromList(listKey, detailId)\r\n                }\r\n              }}>\r\n                Yes\r\n              </Button>\r\n              {' '}\r\n              <Button onClick={() => {\r\n                audioOnClick.play();\r\n                document.body.click();\r\n              }}>\r\n                No\r\n              </Button>\r\n            </Popover.Content>\r\n          </Popover>\r\n        }\r\n      >\r\n        {button}\r\n      </OverlayTrigger>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {lists.length > 0 ? (\r\n        <Row>\r\n          <Col>\r\n            <Tab.Container id=\"list-group-tabs-example\">\r\n              <Row>\r\n                <Col xs={4} style={{minWidth: \"125pt\"}}>\r\n                  <h2 className=\"listsTitle\">Lists:</h2>\r\n                  <ListGroup style={{marginTop: \"5pt\"}}>\r\n                    {lists.map((list: IList, i) => (\r\n                      <ListGroup.Item\r\n                        className=\"lists\"\r\n                        onClick={() => {\r\n                          audioOnClick.play();\r\n                          resetInputs();\r\n                          setEditListObj(list);\r\n                          dispatch(setNewItemButtonVisiblity(true));\r\n                        }}\r\n                        href={list.name + i}\r\n                        key={list.name + i}\r\n                      >\r\n                        {list.name}\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col xs={8}>\r\n                  <Tab.Content>\r\n                    {newItemButtonVisiblity && (\r\n                      <div className=\"buttonAndTitleWrapper\">\r\n                        <h2 className=\"itemsTitle\">Items in {editListObj?.name}:</h2>\r\n                        <Button\r\n                          className=\"addNewItemButton\"\r\n                          disabled={!!(editItem?.editingItem || newItem)}\r\n                          onClick={() => {\r\n                            audioOnClick.play();\r\n                            setNewItem(true);\r\n                          }}\r\n                        >\r\n                          Add new item\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                    {lists.map((list: IList, i) => (\r\n                      <Tab.Pane key={\"list\" + i} eventKey={list.name + i}>\r\n                        <Table bordered hover size=\"sm\" className=\"table\">\r\n                          <thead>\r\n                          <tr>\r\n                            <th className=\"id\">id</th>\r\n                            <th className=\"text\">Text</th>\r\n                            <th className=\"priority\">Priority</th>\r\n                            <th className=\"actions\">Actions</th>\r\n                          </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          {list.detail.map((detail: IListDetail, index) => (\r\n                            <tr\r\n                              key={\"detal\" + index}\r\n                              style={detail.priority ? {\r\n                                backgroundColor: 'rgb(190,0,0)',\r\n                                color: 'white'\r\n                              } : {backgroundColor: 'white'}}\r\n                            >\r\n                              <td className=\"textCentered\">{detail.id}</td>\r\n                              <td>\r\n                                {editItem?.editingItemId === detail.id ? (\r\n                                  <FormControl\r\n                                    as=\"textarea\"\r\n                                    value={newItemText}\r\n                                    onChange={handleInputChange(setNewItemText)}\r\n                                  />\r\n                                ) : (\r\n                                  detail.text\r\n                                )}\r\n                              </td>\r\n                              <td className=\"textCentered\">\r\n                                {editItem?.editingItemId === detail.id ? (\r\n                                  <Form.Check\r\n                                    checked={newItemPriority}\r\n                                    className=\"priorityCheckbox\"\r\n                                    type=\"checkbox\"\r\n                                    id={'priority' + new Date(detail.date).getTime()}\r\n                                    onChange={() => {\r\n                                      audioOnClick.play();\r\n                                      setNewItemPriority(\r\n                                        (document.getElementById('priority' + new Date(detail.date).getTime()) as HTMLInputElement).checked\r\n                                      );\r\n                                    }}\r\n                                  />\r\n                                ) : (\r\n                                  detail.priority ? \"True\" : \"False\"\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"sapceBetween\">\r\n                                  <span\r\n                                    className={`${(newItem || (editItem?.editingItem && editItem.editingItemId !== detail.id)) ? 'disabledWrapper' : ''}`}\r\n                                  >\r\n                                    {editItem?.editingItemId === detail.id ? (\r\n                                      <FontAwesomeIcon\r\n                                        icon={faCheckSquare}\r\n                                        className=\"controlIcon\"\r\n                                        onClick={() => {\r\n                                          audioOnClick.play();\r\n                                          handleEditItemInList(list.key, detail);\r\n                                        }}\r\n                                      />\r\n                                    ) : (\r\n                                      <FontAwesomeIcon\r\n                                        icon={faEdit}\r\n                                        className={`controlIcon ${(newItem || (editItem?.editingItem && editItem.editingItemId !== detail.id)) && 'disabled'}`}\r\n                                        onClick={() => {\r\n                                          audioOnClick.play();\r\n                                          setEditItem({editingItem: true, editingItemId: detail.id});\r\n                                          setNewItemText(detail.text);\r\n                                          setNewItemPriority(detail.priority);\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  </span>\r\n                                  <span\r\n                                    className={`${(newItem || (editItem && editItem.editingItem)) ? 'disabledWrapper' : ''}`}\r\n                                  >\r\n                                    {confirmDelete(\r\n                                      <FontAwesomeIcon\r\n                                        icon={faTrashAlt}\r\n                                        className={`controlIcon ${(newItem || (editItem && editItem.editingItem)) && 'disabled'}`}\r\n                                        onClick={() => audioOnClick.play()}\r\n                                      />,\r\n                                      3,\r\n                                      list.key,\r\n                                      detail.id\r\n                                    )}\r\n                                  </span>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                          {newItem ? (\r\n                            <tr>\r\n                              <td className=\"textCentered\">\r\n                                {list.detail.length > 0 ? list.detail[list.detail.length - 1].id + 1 : 1}\r\n                              </td>\r\n                              <td>\r\n                                <FormControl\r\n                                  id=\"text\"\r\n                                  as=\"textarea\"\r\n                                  onChange={handleInputChange(setNewItemText)}/>\r\n                              </td>\r\n                              <td>\r\n                                <Form.Check\r\n                                  className=\"priorityCheckbox\"\r\n                                  type=\"checkbox\"\r\n                                  id=\"priority\"\r\n                                  onChange={() => {\r\n                                    audioOnClick.play();\r\n                                    setNewItemPriority(\r\n                                      (document.getElementById('priority') as HTMLInputElement).checked\r\n                                    );\r\n                                  }}\r\n                                />\r\n                              </td>\r\n                              <td className=\"sapceBetween\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faPlus}\r\n                                  className=\"controlIcon\"\r\n                                  onClick={() => {\r\n                                    audioOnClick.play();\r\n                                    handleAddItemToList(list.key);\r\n                                  }}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                  icon={faTimes}\r\n                                  className=\"controlIcon\"\r\n                                  onClick={() => {\r\n                                    audioOnClick.play();\r\n                                    resetInputs();\r\n                                  }}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          ) : undefined}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab.Pane>\r\n                    ))}\r\n                  </Tab.Content>\r\n                </Col>\r\n              </Row>\r\n            </Tab.Container>\r\n          </Col>\r\n        </Row>\r\n      ) : undefined}\r\n      <Row className=\"controls\">\r\n        <Col>\r\n          <Modal\r\n            show={newList || editList}\r\n            size=\"sm\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={() => handleModalClose()}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                {editList ? 'Edit list' : 'Add new list'}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  size=\"sm\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter list name\"\r\n                  value={newListName}\r\n                  onChange={handleInputChange(setNewListName)}\r\n                />\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => {\r\n                audioOnClick.play();\r\n                editList ? handleSaveList() : handleAddList();\r\n              }}>\r\n                {editList ? 'Save' : 'Add'}\r\n              </Button>\r\n              <Button onClick={() => {\r\n                handleModalClose();\r\n                audioOnClick.play();\r\n              }}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Button onClick={() => setNewList(true)}>\r\n            Add new list\r\n          </Button>\r\n          <br/>\r\n          <Button\r\n            disabled={!editListObj}\r\n            onClick={() => {\r\n              setEditList(true);\r\n              setNewListName(editListObj ? editListObj.name : '');\r\n            }}\r\n          >\r\n            Edit selected list name\r\n          </Button>\r\n          <br/>\r\n          {confirmDelete(\r\n            <Button disabled={!editListObj}>\r\n              Remove selected list\r\n            </Button>,\r\n            2\r\n          )}\r\n          <br/>\r\n          {confirmDelete(\r\n            <Button disabled={lists.length === 0}>\r\n              Remove all lists\r\n            </Button>,\r\n            1\r\n          )}\r\n          <br/>\r\n          <Button\r\n            disabled={lists.length === 0}\r\n            onClick={() => handleExportLists()}\r\n          >\r\n            <FontAwesomeIcon icon={faCloudDownloadAlt}/> Export lists\r\n          </Button>\r\n          <br/>\r\n          <span>\r\n            <label htmlFor=\"importFile\" className=\"importFile btn btn-primary\" onClick={() => audioOnClick.play()}>\r\n              <FontAwesomeIcon icon={faCloudUploadAlt}/> Import lists\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='importFile'\r\n              accept='.json'\r\n              onChange={e => handleImportLists(e)}\r\n            />\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;","import * as React from 'react';\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst About: React.FC = () => {\r\n  const {push} = useHistory();\r\n\r\n  return (\r\n    <div className=\"aboutPage\">\r\n      <Row>\r\n        <Col>\r\n          This app was created by student Vojtěch Zámečník in the subject TAMZ 1 (Creating applications for mobile\r\n          devices) in the second year of studies.\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          If you have any question, feel free to contact me on email: <a\r\n          href=\"mailto: vojtech.zamecnik.st@vsb.cz\">vojtech.zamecnik.st@vsb.cz</a>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Button onClick={() => push('/')}>\r\n            Back to Home Page\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;","import * as React from 'react';\r\nimport {Link, Route, Switch, useHistory} from \"react-router-dom\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Lists from \"./Lists\";\r\nimport About from \"./About\";\r\n\r\nconst Layout: React.FC = () => {\r\n  const {push} = useHistory();\r\n  // const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"header\">\r\n        <Col>\r\n          <span className=\"title\" onClick={() => push('/')}>\r\n            Shopping lists\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"content\">\r\n        <Col>\r\n          <Switch>\r\n            <Route path=\"/about\" component={About}/>\r\n            <Route path=\"/\" component={Lists}/>\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"footer\">\r\n        <Col>\r\n          <div>\r\n            Created by Vojtěch Zámečník\r\n          </div>\r\n          <div>\r\n            <Link to=\"/about\">About web</Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Layout from './pages/Lyout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {IState} from './types';\r\n\r\nconst initialState: IState = {\r\n  lists: [],\r\n  newItemButtonVisibility: false,\r\n};\r\n\r\nconst rootReducer = (state: IState = initialState, action: any): IState => {\r\n  switch (action.type) {\r\n    case 'SET_LISTS':\r\n      return {...state, lists: action.payload};\r\n    case 'SET_NEW_ITEM_BUTTON_VISIBILITY':\r\n      return {...state, newItemButtonVisibility: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n// const store = createStore(rootReducer);\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}